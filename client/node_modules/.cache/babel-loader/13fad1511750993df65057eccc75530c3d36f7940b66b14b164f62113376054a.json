{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskirboga\\\\kelimeOgrenme\\\\client\\\\src\\\\components\\\\WordList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordList = () => {\n  _s();\n  const [words, setWords] = useState([]);\n  useEffect(() => {\n    const fetchWords = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get('http://localhost:5000/api/words', {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        console.log('Fetched words:', res.data); // Kelimelerin başarıyla alınıp alınmadığını kontrol edin\n        setWords(res.data);\n      } catch (err) {\n        console.error('Fetch words error:', err);\n      }\n    };\n    fetchWords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Word List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), words.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [word.english, \" - \", word.turkish]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No words available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(WordList, \"QrHlQthZFfwcsWWYyDJIvsds8f8=\");\n_c = WordList;\nexport default WordList;\nvar _c;\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WordList","_s","words","setWords","fetchWords","token","localStorage","getItem","res","get","headers","console","log","data","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","word","index","english","turkish","_c","$RefreshReg$"],"sources":["C:/Users/mskirboga/kelimeOgrenme/client/src/components/WordList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst WordList = () => {\r\n    const [words, setWords] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchWords = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const res = await axios.get('http://localhost:5000/api/words', {\r\n                    headers: {\r\n                        'x-auth-token': token\r\n                    }\r\n                });\r\n                console.log('Fetched words:', res.data); // Kelimelerin başarıyla alınıp alınmadığını kontrol edin\r\n                setWords(res.data);\r\n            } catch (err) {\r\n                console.error('Fetch words error:', err);\r\n            }\r\n        };\r\n\r\n        fetchWords();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Word List</h2>\r\n            {words.length > 0 ? (\r\n                <ul>\r\n                    {words.map((word, index) => (\r\n                        <li key={index}>\r\n                            {word.english} - {word.turkish}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No words available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WordList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,iCAAiC,EAAE;UAC3DC,OAAO,EAAE;YACL,cAAc,EAAEL;UACpB;QACJ,CAAC,CAAC;QACFM,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC;QACzCV,QAAQ,CAACK,GAAG,CAACK,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVH,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAED,GAAG,CAAC;MAC5C;IACJ,CAAC;IAEDV,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBlB,KAAK,CAACmB,MAAM,GAAG,CAAC,gBACbtB,OAAA;MAAAiB,QAAA,EACKd,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBzB,OAAA;QAAAiB,QAAA,GACKO,IAAI,CAACE,OAAO,EAAC,KAAG,EAACF,IAAI,CAACG,OAAO;MAAA,GADzBF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELrB,OAAA;MAAAiB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnB,EAAA,CAtCID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}