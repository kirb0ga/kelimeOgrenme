{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskirboga\\\\kelimeOgrenme\\\\client\\\\src\\\\components\\\\Report.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Report.css';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Report = () => {\n  _s();\n  const [reportData, setReportData] = useState({\n    levelCounts: {},\n    levelSuccessRates: {}\n  });\n  useEffect(() => {\n    const fetchReport = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/report', {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        });\n        setReportData(res.data);\n      } catch (err) {\n        console.error('Error fetching report:', err);\n      }\n    };\n    fetchReport();\n  }, []);\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.text('Learning Report', 14, 20);\n    const tableColumn = ['Level', 'Word Count', 'Success Rate'];\n    const tableRows = [];\n    Object.keys(reportData.levelCounts).forEach(level => {\n      const wordCount = reportData.levelCounts[level];\n      const successRate = reportData.levelSuccessRates[level].toFixed(2) + '%';\n      tableRows.push([level, wordCount, successRate]);\n    });\n    doc.autoTable(tableColumn, tableRows, {\n      startY: 30\n    });\n    doc.save('report.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"report-header\",\n      children: \"Learning Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"report-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Word Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Success Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(reportData.levelCounts).map(level => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reportData.levelCounts[level]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [reportData.levelSuccessRates[level].toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, level, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download-button\",\n      onClick: generatePDF,\n      children: \"Download Report as PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Report, \"eWtBUuag6OFck6kxDvDx9phHH64=\");\n_c = Report;\nexport default Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsPDF","jsxDEV","_jsxDEV","Report","_s","reportData","setReportData","levelCounts","levelSuccessRates","fetchReport","res","get","headers","localStorage","getItem","data","err","console","error","generatePDF","doc","text","tableColumn","tableRows","Object","keys","forEach","level","wordCount","successRate","toFixed","push","autoTable","startY","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mskirboga/kelimeOgrenme/client/src/components/Report.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Report.css';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nconst Report = () => {\r\n    const [reportData, setReportData] = useState({ levelCounts: {}, levelSuccessRates: {} });\r\n\r\n    useEffect(() => {\r\n        const fetchReport = async () => {\r\n            try {\r\n                const res = await axios.get('http://localhost:5000/api/report', {\r\n                    headers: {\r\n                        'x-auth-token': localStorage.getItem('token')\r\n                    }\r\n                });\r\n                setReportData(res.data);\r\n            } catch (err) {\r\n                console.error('Error fetching report:', err);\r\n            }\r\n        };\r\n\r\n        fetchReport();\r\n    }, []);\r\n\r\n    const generatePDF = () => {\r\n        const doc = new jsPDF();\r\n        doc.text('Learning Report', 14, 20);\r\n\r\n        const tableColumn = ['Level', 'Word Count', 'Success Rate'];\r\n        const tableRows = [];\r\n\r\n        Object.keys(reportData.levelCounts).forEach(level => {\r\n            const wordCount = reportData.levelCounts[level];\r\n            const successRate = reportData.levelSuccessRates[level].toFixed(2) + '%';\r\n            tableRows.push([level, wordCount, successRate]);\r\n        });\r\n\r\n        doc.autoTable(tableColumn, tableRows, { startY: 30 });\r\n        doc.save('report.pdf');\r\n    };\r\n\r\n    return (\r\n        <div className=\"report-container\">\r\n            <h2 className=\"report-header\">Learning Report</h2>\r\n            <table className=\"report-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Level</th>\r\n                        <th>Word Count</th>\r\n                        <th>Success Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(reportData.levelCounts).map(level => (\r\n                        <tr key={level}>\r\n                            <td>{level}</td>\r\n                            <td>{reportData.levelCounts[level]}</td>\r\n                            <td>{reportData.levelSuccessRates[level].toFixed(2)}%</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button className=\"download-button\" onClick={generatePDF}>Download Report as PDF</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Report;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC;IAAES,WAAW,EAAE,CAAC,CAAC;IAAEC,iBAAiB,EAAE,CAAC;EAAE,CAAC,CAAC;EAExFX,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,kCAAkC,EAAE;UAC5DC,OAAO,EAAE;YACL,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;UAChD;QACJ,CAAC,CAAC;QACFR,aAAa,CAACI,GAAG,CAACK,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAChD;IACJ,CAAC;IAEDP,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,GAAG,GAAG,IAAIpB,KAAK,CAAC,CAAC;IACvBoB,GAAG,CAACC,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAE,EAAE,CAAC;IAEnC,MAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,YAAY,EAAE,cAAc,CAAC;IAC3D,MAAMC,SAAS,GAAG,EAAE;IAEpBC,MAAM,CAACC,IAAI,CAACpB,UAAU,CAACE,WAAW,CAAC,CAACmB,OAAO,CAACC,KAAK,IAAI;MACjD,MAAMC,SAAS,GAAGvB,UAAU,CAACE,WAAW,CAACoB,KAAK,CAAC;MAC/C,MAAME,WAAW,GAAGxB,UAAU,CAACG,iBAAiB,CAACmB,KAAK,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;MACxEP,SAAS,CAACQ,IAAI,CAAC,CAACJ,KAAK,EAAEC,SAAS,EAAEC,WAAW,CAAC,CAAC;IACnD,CAAC,CAAC;IAEFT,GAAG,CAACY,SAAS,CAACV,WAAW,EAAEC,SAAS,EAAE;MAAEU,MAAM,EAAE;IAAG,CAAC,CAAC;IACrDb,GAAG,CAACc,IAAI,CAAC,YAAY,CAAC;EAC1B,CAAC;EAED,oBACIhC,OAAA;IAAKiC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BlC,OAAA;MAAIiC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDtC,OAAA;MAAOiC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BlC,OAAA;QAAAkC,QAAA,eACIlC,OAAA;UAAAkC,QAAA,gBACIlC,OAAA;YAAAkC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdtC,OAAA;YAAAkC,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBtC,OAAA;YAAAkC,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRtC,OAAA;QAAAkC,QAAA,EACKZ,MAAM,CAACC,IAAI,CAACpB,UAAU,CAACE,WAAW,CAAC,CAACkC,GAAG,CAACd,KAAK,iBAC1CzB,OAAA;UAAAkC,QAAA,gBACIlC,OAAA;YAAAkC,QAAA,EAAKT;UAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChBtC,OAAA;YAAAkC,QAAA,EAAK/B,UAAU,CAACE,WAAW,CAACoB,KAAK;UAAC;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxCtC,OAAA;YAAAkC,QAAA,GAAK/B,UAAU,CAACG,iBAAiB,CAACmB,KAAK,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAHrDb,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRtC,OAAA;MAAQiC,SAAS,EAAC,iBAAiB;MAACO,OAAO,EAAEvB,WAAY;MAAAiB,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEd,CAAC;AAACpC,EAAA,CA7DID,MAAM;AAAAwC,EAAA,GAANxC,MAAM;AA+DZ,eAAeA,MAAM;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}