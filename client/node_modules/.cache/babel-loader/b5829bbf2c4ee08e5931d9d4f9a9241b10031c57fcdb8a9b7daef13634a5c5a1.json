{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskirboga\\\\kelimeOgrenme\\\\client\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    newPassword: ''\n  });\n  const [message, setMessage] = useState('');\n  const history = useHistory();\n  const {\n    username,\n    newPassword\n  } = formData;\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/reset-password', formData);\n      setMessage('Password reset successfully');\n      setTimeout(() => {\n        history.push('/');\n      }, 5000); // 5 seconds delay\n    } catch (err) {\n      console.error('Reset password error:', err.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          name: \"username\",\n          value: username,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          name: \"newPassword\",\n          value: newPassword,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"IIn4OQLKL7YyMKJ9Mpazu6rAUxI=\", false, function () {\n  return [useHistory];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useHistory","jsxDEV","_jsxDEV","ResetPassword","_s","formData","setFormData","username","newPassword","message","setMessage","history","onChange","e","target","name","value","onSubmit","preventDefault","res","post","setTimeout","push","err","console","error","response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/mskirboga/kelimeOgrenme/client/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        newPassword: ''\r\n    });\r\n    const [message, setMessage] = useState('');\r\n    const history = useHistory();\r\n\r\n    const { username, newPassword } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/api/auth/reset-password', formData);\r\n            setMessage('Password reset successfully');\r\n            setTimeout(() => {\r\n                history.push('/');\r\n            }, 5000); // 5 seconds delay\r\n        } catch (err) {\r\n            console.error('Reset password error:', err.response.data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reset-password-container\">\r\n            <h1>Reset Password</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={onChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"New Password\"\r\n                        name=\"newPassword\"\r\n                        value={newPassword}\r\n                        onChange={onChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Reset Password</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}