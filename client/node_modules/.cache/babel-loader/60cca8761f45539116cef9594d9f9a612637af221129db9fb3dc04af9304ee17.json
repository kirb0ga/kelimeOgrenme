{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskirboga\\\\kelimeOgrenme\\\\client\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = ({\n  username\n}) => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handlePasswordReset = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/auth/reset-password', {\n        username,\n        newPassword\n      });\n      setMessage('Password successfully reset. You will be redirected to the login page.');\n      setTimeout(() => {\n        navigate('/');\n      }, 5000); // 5 seconds delay\n    } catch (error) {\n      alert('Error resetting password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter your new password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePasswordReset,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"d48PEEq0o5MOykB02NvbblDI/ik=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","ResetPassword","username","_s","newPassword","setNewPassword","message","setMessage","navigate","handlePasswordReset","post","setTimeout","error","alert","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mskirboga/kelimeOgrenme/client/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ResetPassword = ({ username }) => {\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handlePasswordReset = async () => {\r\n        try {\r\n            await axios.post('http://localhost:5000/api/auth/reset-password', { username, newPassword });\r\n            setMessage('Password successfully reset. You will be redirected to the login page.');\r\n            setTimeout(() => {\r\n                navigate('/');\r\n            }, 5000); // 5 seconds delay\r\n        } catch (error) {\r\n            alert('Error resetting password. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Enter your new password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n            <button onClick={handlePasswordReset}>Reset Password</button>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACA,MAAMZ,KAAK,CAACa,IAAI,CAAC,+CAA+C,EAAE;QAAER,QAAQ;QAAEE;MAAY,CAAC,CAAC;MAC5FG,UAAU,CAAC,wEAAwE,CAAC;MACpFI,UAAU,CAAC,MAAM;QACbH,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,KAAK,CAAC,6CAA6C,CAAC;IACxD;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MACIe,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,yBAAyB;MACrCC,KAAK,EAAEb,WAAY;MACnBc,QAAQ,EAAGC,CAAC,IAAKd,cAAc,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACFxB,OAAA;MAAQyB,OAAO,EAAEhB,mBAAoB;MAAAK,QAAA,EAAC;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5DlB,OAAO,iBAAIN,OAAA;MAAAc,QAAA,EAAIR;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACrB,EAAA,CA7BIF,aAAa;EAAA,QAGEH,WAAW;AAAA;AAAA4B,EAAA,GAH1BzB,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}