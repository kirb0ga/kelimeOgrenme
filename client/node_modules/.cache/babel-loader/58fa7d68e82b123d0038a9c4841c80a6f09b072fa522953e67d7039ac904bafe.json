{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskirboga\\\\kelimeOgrenme\\\\client\\\\src\\\\components\\\\Report.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Report.css';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Report = () => {\n  _s();\n  const [levelCounts, setLevelCounts] = useState({});\n  const [levelSuccessRates, setLevelSuccessRates] = useState({});\n  useEffect(() => {\n    const fetchReport = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/report', {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        });\n        setLevelCounts(res.data.levelCounts);\n        setLevelSuccessRates(res.data.levelSuccessRates);\n      } catch (err) {\n        console.error('Fetch report error:', err);\n      }\n    };\n    fetchReport();\n  }, []);\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.text('Report', 14, 20);\n    doc.autoTable({\n      startY: 30,\n      head: [['Level', 'Total Words', 'Success Rate']],\n      body: Object.keys(levelCounts).map(level => [level, levelCounts[level], `${levelSuccessRates[level].toFixed(2)}%`])\n    });\n    doc.save('report.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"report-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Words\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Success Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(levelCounts).map(level => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: levelCounts[level]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${levelSuccessRates[level].toFixed(2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, level, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generatePDF,\n      children: \"Download PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Report, \"iZ4jeojER1QIoofQ+RJH5m8ljbE=\");\n_c = Report;\nexport default Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsPDF","jsxDEV","_jsxDEV","Report","_s","levelCounts","setLevelCounts","levelSuccessRates","setLevelSuccessRates","fetchReport","res","get","headers","localStorage","getItem","data","err","console","error","generatePDF","doc","text","autoTable","startY","head","body","Object","keys","map","level","toFixed","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mskirboga/kelimeOgrenme/client/src/components/Report.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Report.css';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nconst Report = () => {\r\n    const [levelCounts, setLevelCounts] = useState({});\r\n    const [levelSuccessRates, setLevelSuccessRates] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchReport = async () => {\r\n            try {\r\n                const res = await axios.get('http://localhost:5000/api/report', {\r\n                    headers: {\r\n                        'x-auth-token': localStorage.getItem('token')\r\n                    }\r\n                });\r\n                setLevelCounts(res.data.levelCounts);\r\n                setLevelSuccessRates(res.data.levelSuccessRates);\r\n            } catch (err) {\r\n                console.error('Fetch report error:', err);\r\n            }\r\n        };\r\n\r\n        fetchReport();\r\n    }, []);\r\n\r\n    const generatePDF = () => {\r\n        const doc = new jsPDF();\r\n\r\n        doc.text('Report', 14, 20);\r\n        doc.autoTable({\r\n            startY: 30,\r\n            head: [['Level', 'Total Words', 'Success Rate']],\r\n            body: Object.keys(levelCounts).map(level => [\r\n                level,\r\n                levelCounts[level],\r\n                `${levelSuccessRates[level].toFixed(2)}%`\r\n            ]),\r\n        });\r\n\r\n        doc.save('report.pdf');\r\n    };\r\n\r\n    return (\r\n        <div className=\"report-container\">\r\n            <h2>Report</h2>\r\n            <table className=\"report-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Level</th>\r\n                        <th>Total Words</th>\r\n                        <th>Success Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(levelCounts).map(level => (\r\n                        <tr key={level}>\r\n                            <td>{level}</td>\r\n                            <td>{levelCounts[level]}</td>\r\n                            <td>{`${levelSuccessRates[level].toFixed(2)}%`}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button onClick={generatePDF}>Download PDF</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Report;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}