{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskirboga\\\\kelimeOgrenme\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  limit\n}) => {\n  _s();\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const fetchQuiz = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const res = await axios.get(`http://localhost:5000/api/quiz?limit=${limit}`, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      setWords(res.data);\n    } catch (err) {\n      console.error(err.response.data);\n    }\n  };\n  useEffect(() => {\n    fetchQuiz();\n  }, [limit]);\n  const handleAnswer = async isCorrect => {\n    const token = localStorage.getItem('token');\n    try {\n      const wordId = words[currentWordIndex].id;\n      await axios.post('http://localhost:5000/api/quiz', {\n        wordId,\n        correct: isCorrect\n      }, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      if (isCorrect) {\n        setScore(score + 1);\n      }\n      const nextIndex = currentWordIndex + 1;\n      if (nextIndex < words.length) {\n        setCurrentWordIndex(nextIndex);\n      } else {\n        alert(`Quiz completed! Your score: ${score}/${words.length}`);\n        setCurrentWordIndex(0);\n        setScore(0);\n        fetchQuiz();\n      }\n    } catch (err) {\n      console.error(err.response.data);\n    }\n  };\n  if (words.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  const currentWord = words[currentWordIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentWord.english\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswer(true),\n      children: \"Correct\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswer(false),\n      children: \"Incorrect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"IgabITHin0QMBo2ThZfAtijsFeg=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Quiz","limit","_s","words","setWords","currentWordIndex","setCurrentWordIndex","score","setScore","fetchQuiz","token","localStorage","getItem","res","get","headers","data","err","console","error","response","handleAnswer","isCorrect","wordId","id","post","correct","nextIndex","length","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","currentWord","english","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mskirboga/kelimeOgrenme/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Quiz = ({ limit }) => {\r\n  const [words, setWords] = useState([]);\r\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const fetchQuiz = async () => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/api/quiz?limit=${limit}`, {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n      setWords(res.data);\r\n    } catch (err) {\r\n      console.error(err.response.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuiz();\r\n  }, [limit]);\r\n\r\n  const handleAnswer = async (isCorrect) => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      const wordId = words[currentWordIndex].id;\r\n      await axios.post('http://localhost:5000/api/quiz', { wordId, correct: isCorrect }, {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n\r\n      if (isCorrect) {\r\n        setScore(score + 1);\r\n      }\r\n\r\n      const nextIndex = currentWordIndex + 1;\r\n      if (nextIndex < words.length) {\r\n        setCurrentWordIndex(nextIndex);\r\n      } else {\r\n        alert(`Quiz completed! Your score: ${score}/${words.length}`);\r\n        setCurrentWordIndex(0);\r\n        setScore(0);\r\n        fetchQuiz();\r\n      }\r\n    } catch (err) {\r\n      console.error(err.response.data);\r\n    }\r\n  };\r\n\r\n  if (words.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentWord = words[currentWordIndex];\r\n\r\n  return (\r\n    <div>\r\n      <h1>Quiz</h1>\r\n      <p>{currentWord.english}</p>\r\n      <button onClick={() => handleAnswer(true)}>Correct</button>\r\n      <button onClick={() => handleAnswer(false)}>Incorrect</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}