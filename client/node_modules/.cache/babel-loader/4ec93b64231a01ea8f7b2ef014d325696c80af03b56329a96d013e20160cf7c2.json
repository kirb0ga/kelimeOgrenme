{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskirboga\\\\kelimeOgrenme\\\\client\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = ({\n  username\n}) => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const handlePasswordReset = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/auth/reset-password', {\n        username,\n        newPassword\n      });\n      alert('Password successfully reset. You can now log in with your new password.');\n    } catch (error) {\n      alert('Error resetting password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter your new password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePasswordReset,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"PK0C4UzgArwpaGbT51zub/nqatQ=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ResetPassword","username","_s","newPassword","setNewPassword","handlePasswordReset","post","alert","error","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mskirboga/kelimeOgrenme/client/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ResetPassword = ({ username }) => {\r\n    const [newPassword, setNewPassword] = useState('');\r\n\r\n    const handlePasswordReset = async () => {\r\n        try {\r\n            await axios.post('http://localhost:5000/api/auth/reset-password', { username, newPassword });\r\n            alert('Password successfully reset. You can now log in with your new password.');\r\n        } catch (error) {\r\n            alert('Error resetting password. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Enter your new password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n            <button onClick={handlePasswordReset}>Reset Password</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACA,MAAMR,KAAK,CAACS,IAAI,CAAC,+CAA+C,EAAE;QAAEL,QAAQ;QAAEE;MAAY,CAAC,CAAC;MAC5FI,KAAK,CAAC,yEAAyE,CAAC;IACpF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZD,KAAK,CAAC,6CAA6C,CAAC;IACxD;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAU,QAAA,gBACIV,OAAA;MACIW,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,yBAAyB;MACrCC,KAAK,EAAET,WAAY;MACnBU,QAAQ,EAAGC,CAAC,IAAKV,cAAc,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACFpB,OAAA;MAAQqB,OAAO,EAAEf,mBAAoB;MAAAI,QAAA,EAAC;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEd,CAAC;AAACjB,EAAA,CAvBIF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAyBnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}