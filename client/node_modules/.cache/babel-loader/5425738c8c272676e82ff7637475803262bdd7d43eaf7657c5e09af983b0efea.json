{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskirboga\\\\kelimeOgrenme\\\\client\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [dailyWordCount, setDailyWordCount] = useState(10);\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/settings', {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        });\n        setDailyWordCount(res.data.dailyWordCount);\n      } catch (err) {\n        console.error('Fetch settings error:', err);\n      }\n    };\n    fetchSettings();\n  }, []);\n  const handleSave = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/settings', {\n        dailyWordCount\n      }, {\n        headers: {\n          'x-auth-token': localStorage.getItem('token')\n        }\n      });\n      alert('Settings updated successfully');\n    } catch (err) {\n      console.error('Update settings error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dailyWordCount\",\n        children: \"Daily Word Count:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"dailyWordCount\",\n        value: dailyWordCount,\n        onChange: e => setDailyWordCount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Settings, \"MvfGNmp+BuZC+xYuGbAn+L2Mt5Q=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Settings","_s","dailyWordCount","setDailyWordCount","fetchSettings","res","get","headers","localStorage","getItem","data","err","console","error","handleSave","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mskirboga/kelimeOgrenme/client/src/components/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Settings.css';\r\n\r\nconst Settings = () => {\r\n    const [dailyWordCount, setDailyWordCount] = useState(10);\r\n\r\n    useEffect(() => {\r\n        const fetchSettings = async () => {\r\n            try {\r\n                const res = await axios.get('http://localhost:5000/api/settings', {\r\n                    headers: {\r\n                        'x-auth-token': localStorage.getItem('token')\r\n                    }\r\n                });\r\n                setDailyWordCount(res.data.dailyWordCount);\r\n            } catch (err) {\r\n                console.error('Fetch settings error:', err);\r\n            }\r\n        };\r\n\r\n        fetchSettings();\r\n    }, []);\r\n\r\n    const handleSave = async () => {\r\n        try {\r\n            await axios.post('http://localhost:5000/api/settings', { dailyWordCount }, {\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token')\r\n                }\r\n            });\r\n            alert('Settings updated successfully');\r\n        } catch (err) {\r\n            console.error('Update settings error:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"settings-container\">\r\n            <h2>Settings</h2>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"dailyWordCount\">Daily Word Count:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"dailyWordCount\"\r\n                    value={dailyWordCount}\r\n                    onChange={(e) => setDailyWordCount(e.target.value)}\r\n                />\r\n            </div>\r\n            <button onClick={handleSave}>Save</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZ,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,oCAAoC,EAAE;UAC9DC,OAAO,EAAE;YACL,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;UAChD;QACJ,CAAC,CAAC;QACFN,iBAAiB,CAACE,GAAG,CAACK,IAAI,CAACR,cAAc,CAAC;MAC9C,CAAC,CAAC,OAAOS,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC/C;IACJ,CAAC;IAEDP,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMjB,KAAK,CAACkB,IAAI,CAAC,oCAAoC,EAAE;QAAEb;MAAe,CAAC,EAAE;QACvEK,OAAO,EAAE;UACL,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;QAChD;MACJ,CAAC,CAAC;MACFO,KAAK,CAAC,+BAA+B,CAAC;IAC1C,CAAC,CAAC,OAAOL,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAChD;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKkB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBnB,OAAA;QAAOwB,OAAO,EAAC,gBAAgB;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzDvB,OAAA;QACIyB,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,gBAAgB;QACnBC,KAAK,EAAExB,cAAe;QACtByB,QAAQ,EAAGC,CAAC,IAAKzB,iBAAiB,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvB,OAAA;MAAQ+B,OAAO,EAAEhB,UAAW;MAAAI,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAACrB,EAAA,CAhDID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}